Name: mirage-oram
Version: 0.0.1
Synopsis: A library that implements Path ORAM as a functor on the MirageOS V1.BLOCK interface
Authors: Rupert Horlick <mail@ruperthorlick.com>
License: LGPL with OCaml linking exception

Description: A library that implements Path ORAM as a functor on the MirageOS V1.BLOCK interface
Homepage: https://github.com/ruhatch/mirage-oram

OASISFormat: 0.4
BuildTools: ocamlbuild
Plugins: META (0.4), DevFiles (0.4)

Library mirage_oram
  Path:             src
  Findlibname:      mirage-oram
  Modules:          Oram,
                    Stash,
                    OBlock,
                    PosMap
  BuildDepends:     core_kernel,
                    mirage,
                    cstruct,
                    lwt,
                    lwt.syntax

Library tests
  Path: tests
  Build$:           flag(tests)
  Modules: Testable
  BuildDepends: alcotest, lwt, lwt.unix

Executable "oram_tests"
  Path:             tests
  MainIs:           oram_tests.ml
  Build$:           flag(tests)
  CompiledObject:   best
  Install:          false
  BuildDepends:     mirage-oram,
                    alcotest,
                    mirage-block-unix,
                    lwt,
                    tests

Executable "stash_tests"
  Path:             tests
  MainIs:           stash_tests.ml
  Build$:           flag(tests)
  CompiledObject:   best
  Install:          false
  BuildDepends:     mirage-oram,
                    alcotest,
                    tests

Executable "posmap_tests"
  Path:             tests
  MainIs:           posmap_tests.ml
  Build$:           flag(tests)
  CompiledObject:   best
  Install:          false
  BuildDepends:     mirage-oram,
                    alcotest,
                    tests

Executable "oblock_tests"
  Path:             tests
  MainIs:           oblock_tests.ml
  Build$:           flag(tests)
  CompiledObject:   best
  Install:          false
  BuildDepends:     mirage-oram,
                    alcotest,
                    tests

Test "oram_tests"
  Run$:             flag(tests)
  TestTools:        oram_tests
  Command:          $oram_tests
  WorkingDirectory: tests

Test "stash_tests"
  Run$:             flag(tests)
  TestTools:        stash_tests
  Command:          $stash_tests
  WorkingDirectory: tests

Test "posmap_tests"
  Run$:             flag(tests)
  TestTools:        posmap_tests
  Command:          $posmap_tests
  WorkingDirectory: tests

Test "oblock_tests"
  Run$:             flag(tests)
  TestTools:        oblock_tests
  Command:          $oblock_tests
  WorkingDirectory: tests
